# This is a basic workflow to help you get started with Actions

name: Deploy PWA to Pages

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    steps:
      - name: Get Current Date
        run: |
          echo "CURR_DATE=$(date --iso-8601)" >> $GITHUB_ENV
      - name: Cache previous uses
        id: env-ready
        uses: actions/cache@v3.0.5
        with:
          path: $HOME/.cargo/*
          key: pages-deploy-env-ready-${{ env.CURR_DATE }}
      - name: Install Rust Native
        if: ${{ steps.env-ready.outputs.cache-hit == 'false' }}
        uses: actions-rs/toolchain@v1.0.6
        with:
          toolchain: stable
          default: true
      - name: Install Trunk
        if: ${{ steps.env-ready.outputs.cache-hit == 'false' }}
        run: |
          cargo install trunk
      - name: Install Rust Wasm
        if: ${{ steps.env-ready.outputs.cache-hit == 'false' }}
        uses: actions-rs/toolchain@v1.0.6
        with:
          toolchain: nightly
          target: wasm32-unknown-unknown
      - name: Check out Main repo
        uses: actions/checkout@v3
        with:
          submodules: true
          path: ./rpncalc
      - name: Check out Pages repo
        uses: actions/checkout@v3
        with:
          repository: AZMCode/rpncalc-yew-deployment
          ssh-key: ${{ secrets.PAGES_DEPLOYMENT }}
          path: ./pages
      - name: Build Deployment
        run: |
          cd $GITHUB_WORKSPACE/rpncalc/rpncalc-yew
          rustup default nightly
          trunk build
      - name: Remove existing files in Pages deployment
        run: |
          cd $GITHUB_WORKSPACE/pages
          for entry in * ; do
            if [[ "$entry" != ".git" ]]; then
              rm -rf $entry;
            fi
          done
      - name: Copy new files to Pages deployment
        run: |
          cp $GITHUB_WORKSPACE/rpncalc/rpncalc-yew/dist/* $GITHUB_WORKSPACE/pages/
      - name: Commit and push new files
        run: |
          cd $GITHUB_WORKSPACE/pages
          git add -A
          git commit -m "Deployment for ${{ github.ref }}"
          git push
          
